<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">
    <bean id="user" class="spring.entity.User"></bean>

    <bean id="user2" class="spring.entity.User" scope="prototype"></bean>

    <bean id="user3" class="spring.entity.User" init-method="init"></bean>

    <bean id="user4" class="spring.entity.User" init-method="init" scope="prototype"></bean>

    <bean id="user5" class="spring.entity.User" destroy-method="destroy" ></bean>

    <bean id="user6" class="spring.entity.User" destroy-method="destroy" scope="prototype"></bean>

    <bean id="lazy" class="spring.entity.User2" lazy-init="true" init-method="init"></bean>

    <bean id="calendar" class="java.util.Calendar" factory-method="getInstance"> </bean>

    <bean id="tool" class="spring.entity.Tool">
        <property name="name" value="工具"></property>
    </bean>
    <bean id="person" class="spring.entity.Person">
        <property name="name" value="人类"></property>
        <property name="tool" ref="tool"></property>
    </bean>
    <bean id="person2" class="spring.entity.Person">
        <constructor-arg name="name" value="第二个人"></constructor-arg>
        <property name="tool" ref="tool"></property>
    </bean>
    <!--注入时间  直接value='0'不行需要单独value标签 -->
    <bean id="date" class="java.util.Date">
        <constructor-arg index="0" >
            <value type="long">0</value>
        </constructor-arg>
    </bean>

    <bean id="sampleBean" class="spring.entity.SampleBean">
        <property name="id" value="001"></property>
        <property name="tag" value="beanTag"></property>
        <property name="name" value="beanName"></property>
        <property name="date" ref="date"></property>
        <constructor-arg name="name" value="bean"></constructor-arg>
        <property name="listData" ref="list">
        <!--<list>
            <value>list1</value>
            <value>list2</value>
            <value>list3</value>
        </list>-->
        </property>
        <property name="setData">
            <set>
                <value>set1</value>
                <value>set2</value>
                <value>set3</value>
            </set>
        </property>
        <property name="mapData">
            <map>
                <entry key="1" value="V-1"></entry>
                <entry key="2" value="V-2"></entry>
                <entry key="3" value="V-3"></entry>
            </map>
        </property>

        <property name="properties" ref="dbConfig"></property>

        <!--<property name="properties">
            <props>
                <prop key="username">username</prop>
                <prop key="password">password</prop>
            </props>
        </property>-->
    </bean>


    <!--properties文件-->
    <util:properties id="dbConfig" location="classpath:db.properties"></util:properties>

    <util:list id="list">
            <value>list1</value>
            <value>list2</value>
            <value>list3</value>
    </util:list>

    <!--配置注解 扫描组件-->
    <!--<context:annotation-config>
    是用于激活那些已经在spring容器里注册过的bean上面的注解。
    （无论是通过xml的方式还是通过package sanning的方式）

    <context:component-scan>除了具有<context:annotation-config>的功能之外，
    <context:component-scan>还可以在指定的package下扫描以及注册javabean 。-->

    <!--<context:annotation-config/>-->
    <context:component-scan base-package="spring.entity" />



</beans>